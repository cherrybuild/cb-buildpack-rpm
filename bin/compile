#!/bin/bash

# fail fast
set -o errexit
set -o nounset
set -o pipefail

indent() {
  sed -u 's/^/       /'
}

scriptname=$(basename $0)
case $# in
  2) :;;
  *) echo "$scriptname: usage: $scriptname BUILD_DIR CACHE_DIR" >&2; exit 2;;
esac

build_dir="$1"
cache_dir="$2"
ccache_max_size=50G
num_cpu=$(grep -c ^bogomips /proc/cpuinfo)
rpmbuild=$build_dir/.rpmbuild
rpmspec=$build_dir/.heroku/vendor/bin/rpmspec

export CCACHE_DIR=$cache_dir/ccache
export CC='ccache gcc'
export CXX='ccache g++'

echo "-----> Zeroing ccache stats"
ccache -M $ccache_max_size 2>&1 | indent
ccache -z 2>&1 | indent

echo "-----> Creating RPM build tree"
mkdir -p $rpmbuild/{BUILD,BUILDROOT,RPMS,SRPMS}
mkdir -p $cache_dir/rpmbuild/SOURCES

echo "-----> Creating .rpmmacros"
if [ -f /etc/redhat-release ]
then
  case $(awk '{print $3}' < etc/redhat-release) in
    5.*)
      cat <<EOT >$HOME/.rpmmacros
%centos_version 505
%dist .el5
%rhel 5
EOT
      ;;
    6.*)
      cat <<EOT >$HOME/.rpmmacros
%centos_version 600
EOT
      ;;
  esac
fi

if ls $build_dir/*.spec >/dev/null 2>&1
then
  specfile=$(ls $build_dir/*.spec)
elif ls $build_dir/SPECS/*.spec >/dev/null 2>&1
then
  specfile=$(ls $build_dir/SPECS/*.spec)
else
  echo "      error: Cannot find specfile"
  exit 1
fi

if [ -d $build_dir/SOURCES ]
then
  sourcedir=$build_dir/SOURCES
else
  sourcedir=$build_dir
fi

if ls $build_dir/*.spec.in >/dev/null 2>&1
then
  cd $build_dir >/dev/null 2>&1
  num_sources=$($rpmspec -qP $build_dir/*.spec | egrep '^(Source|Patch).*:' | awk '$2 ~ /^http|ftp/ {print $2}' | wc -l)
  case $num_sources in
    1) :;;
    *) echo "       error: Found $num_sources source URLs, should be 1"; exit 1;;
  esac
  source_url=$($rpmspec -qP $build_dir/*.spec | egrep '^(Source|Patch).*:' | awk '$2 ~ /^http|ftp/ {print $2}')
  source_file=$(basename $source_url)
  case $source_file in
    *.tar*) :;;
    *) echo "       error: Don't know how to create archive $source_file"; exit 1;;
  esac
  echo "-----> Creating source archive"
  ./autogen.sh 2>&1 | indent
  ./configure 2>&1 | indent
  make dist-bzip2 2>&1 | indent
  cd - >/dev/null 2>&1
elif [ -f $build_dir/setup.py ]
then
  echo "-----> Creating source archive"
  cd $build_dir >/dev/null 2>&1
  # XXX: For ansible
  if [ -f $build_dir/hacking/module_formatter.py ]
  then
    spec_version=$(cat $specfile | awk -F: '$1 == "Version" {print $2}' | sed 's/^[[:space:]]*//; s/;[[:space:]]*/;/g')

    distribute_dir=distribute-0.6.49
    distribute_tarball=$distribute_dir.tar.gz
    distribute_url=https://pypi.python.org/packages/source/d/distribute/$distribute_tarball
    if [ ! -f $cache_dir/$distribute_tarball ]
    then
      curl -fsSL $distribute_url >$cache_dir/$distribute_tarball.new | indent
      mv $cache_dir/$distribute_tarball.new $cache_dir/$distribute_tarball
    fi
    tar -C /tmp -xzf $cache_dir/$distribute_tarball
    cd /tmp/$distribute_dir >/dev/null 2>&1
    python setup.py install --user 2>&1 | indent
    cd - >/dev/null 2>&1

    pip_dir=pip-1.4.1
    pip_tarball=$pip_dir.tar.gz
    pip_url=https://pypi.python.org/packages/source/p/pip/$pip_tarball
    if [ ! -f $cache_dir/$pip_tarball ]
    then
      curl -fsSL $pip_url >$cache_dir/$pip_tarball.new | indent
      mv $cache_dir/$pip_tarball.new $cache_dir/$pip_tarball
    fi
    tar -C /tmp -xzf $cache_dir/$pip_tarball
    cd /tmp/$pip_dir >/dev/null 2>&1
    python setup.py install --user 2>&1 | indent
    cd - >/dev/null 2>&1

    $HOME/.local/bin/pip install --user jinja2 PyYAML 2>&1 | indent
    env PYTHONPATH=./lib python hacking/module_formatter.py -A $spec_version -t man -o docs/man/man3/ --module-dir=library --template-dir=hacking/templates 2>&1 | indent
  fi
  python setup.py sdist --formats=bztar,gztar 2>&1 | indent
  mv dist/*.tar.bz2 .
  mv dist/*.tar.gz .
  cd - >/dev/null 2>&1
else
  echo "-----> Downloading sources and patches"
  cd $build_dir >/dev/null 2>&1
  $rpmspec -qP $build_dir/*.spec \
  | egrep '^(Source|Patch).*:' \
  | awk '{print $2}' \
  | while read -r url
  do
    file=$(basename $url)
    spec_package=$(cat $specfile | awk -F: '$1 == "Name" {print $2}' | sed 's/^[[:space:]]*//; s/;[[:space:]]*/;/g')
    spec_version=$(cat $specfile | awk -F: '$1 == "Version" {print $2}' | sed 's/^[[:space:]]*//; s/;[[:space:]]*/;/g')
    case "$url" in
      ^http*|^ftp*)
        if [ -f $cache_dir/rpmbuild/SOURCES/$file ]
        then
          echo "       Copying from cache: $file"
          cp -f $cache_dir/rpmbuild/SOURCES/$file $sourcedir/$file
        else
          echo "       Downloading: $url"
          curl -fsSL $url >$sourcedir/$file 2>&1 | indent
          cp -f $sourcedir/$file $cache_dir/rpmbuild/SOURCES/$file.new
          mv $cache_dir/rpmbuild/SOURCES/$file.new $cache_dir/rpmbuild/SOURCES/$file
        fi
        ;;
      $spec_package.tar.bz2)
        echo "-----> Creating source archive: $file"
        tar -C $build_dir -cjf /tmp/$file .
        mv /tmp/$file $sourcedir/$file
        ;;
      $spec_package.tar.gz)
        echo "-----> Creating source archive: $file"
        tar -C $build_dir -czf /tmp/$file .
        mv /tmp/$file $sourcedir/$file
        ;;
      $spec_package-$spec_version.tar.bz2)
        echo "-----> Creating source archive: $file"
        tar -C $build_dir --transform "s,^,$spec_package-$spec_version/," -cjf /tmp/$file .
        mv /tmp/$file $sourcedir/$file
        ;;
      $spec_package-$spec_version.tar.gz)
        echo "-----> Creating source archive: $file"
        tar -C $build_dir --transform "s,^,$spec_package-$spec_version/," -czf /tmp/$file .
        mv /tmp/$file $sourcedir/$file
        ;;
      *)
        echo "       Unrecognized source file: $file"
        ;;
    esac
  done
  if [ -f $sourcedir/sources ]
  then
    echo "-----> Verifying MD5 checksums"
    md5sum -c sources 2>&1 | indent
  fi
  cd - >/dev/null 2>&1
fi

cd $build_dir >/dev/null 2>&1
spec_version=$(cat $specfile | awk -F: '$1 == "Version" {print $2}' | sed 's/^[[:space:]]*//; s/;[[:space:]]*/;/g')
tag=$(git tag | egrep '^(\w*[^0-9])?'"$spec_version"'$' || : | head -n 1)
case "$tag" in
  '') tagged_commit=;;
  *) tagged_commit=$(git rev-list -n 1 "$tag");;
esac
commit=$(git log -n 1 | awk '$1 == "commit" {print $2}')
case "$tagged_commit" in
  "$commit")
    echo "       Found version: $spec_version (release)"
    if grep -q '^Release:.*%{?dist}$' $specfile
    then
      echo "       Not modifying spec file"
    else
      echo "       Adding %{?dist} tag to spec file"
      sed -i "s/^\(Release:.*\)$/\1%{?dist}/" $specfile
    fi
    ;;
  '')
    echo "       Found version: $spec_version (pre-release)"
    timestamp=$(date +%Y%m%d%H%M%S)
    rel=0.$timestamp.dev.g$(echo $commit | sed 's/^\(.\{7\}\).*/\1/')
    echo "       Updating spec file with Release: $rel"
    sed -i "s/^\(Release:[^0-9]*\).*$/\1$rel%{?dist}/" $specfile
    ;;
  *)
    echo "       Found version: $spec_version (post-release)"
    timestamp=$(date +%Y%m%d%H%M%S)
    rel=1.$timestamp.dev.g$(echo $commit | sed 's/^\(.\{7\}\).*/\1/')
    echo "       Updating spec file with Release: $rel"
    sed -i "s/^\(Release:[^0-9]*\).*$/\1$rel%{?dist}/" $specfile
    ;;
esac
cd - >/dev/null 2>&1

# XXX: Make _unpackaged_files_terminate_build configurable?
# --define "_unpackaged_files_terminate_build 0"
echo "-----> Building RPM package"
cd $build_dir >/dev/null 2>&1
rpmbuild -bb \
  --define "_topdir $rpmbuild" \
  --define "_sourcedir $sourcedir" \
  $specfile 2>&1 | indent
cd - >/dev/null 2>&1
